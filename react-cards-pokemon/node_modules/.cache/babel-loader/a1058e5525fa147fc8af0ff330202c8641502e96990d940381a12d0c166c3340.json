{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nfunction useFlip(initialState = true) {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(initialState);\n  const toggle = () => {\n    setIsFlipped(isFlipped => !isFlipped);\n  };\n  return [isFlipped, toggle];\n}\n_s(useFlip, \"CYGhhgVq57OYBnD81sSZRMKNxlc=\");\nasync function useAxios(url, options = {}) {\n  _s2();\n  const [data, setData] = useState([]);\n  const newData = axios.get(url);\n}\n_s2(useAxios, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\nexport { useFlip, useAxios };","map":{"version":3,"names":["React","useEffect","useState","useFlip","initialState","_s","isFlipped","setIsFlipped","toggle","useAxios","url","options","_s2","data","setData","newData","axios","get"],"sources":["/Users/cory/Documents/Google Drive/Coding/Javascript/Springboard/Exercises/react-cards-pokemon/src/hooks.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nfunction useFlip(initialState = true){\n    const [isFlipped, setIsFlipped] = useState(initialState);\n\n    const toggle = () => {\n        setIsFlipped(isFlipped => !isFlipped)\n    }\n\n    return [isFlipped, toggle]\n}\n\nasync function useAxios(url, options = {}) {\n    const [data, setData] = useState([])\n    const newData = axios.get(url)\n}\n\nexport {useFlip, useAxios}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,SAASC,OAAOA,CAACC,YAAY,GAAG,IAAI,EAAC;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EAExD,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBD,YAAY,CAACD,SAAS,IAAI,CAACA,SAAS,CAAC;EACzC,CAAC;EAED,OAAO,CAACA,SAAS,EAAEE,MAAM,CAAC;AAC9B;AAACH,EAAA,CARQF,OAAO;AAUhB,eAAeM,QAAQA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAAAC,GAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMa,OAAO,GAAGC,KAAK,CAACC,GAAG,CAACP,GAAG,CAAC;AAClC;AAACE,GAAA,CAHcH,QAAQ;AAKvB,SAAQN,OAAO,EAAEM,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}